---
---

<section class="relative min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 flex items-center justify-center overflow-hidden">
  <!-- Colorful geometric background elements -->
  <div class="absolute inset-0">
    <!-- Blue diagonal lines -->
    <div class="absolute top-32 left-32 w-24 h-0.5 bg-blue-500 rotate-45 opacity-80"></div>
    <div class="absolute bottom-32 right-32 w-32 h-0.5 bg-blue-600 rotate-45 opacity-70"></div>
    <div class="absolute top-64 right-64 w-40 h-0.5 bg-blue-400 rotate-45 opacity-90"></div>
    
    <!-- Pink diagonal lines -->
    <div class="absolute top-48 left-48 w-20 h-0.5 bg-pink-500 -rotate-45 opacity-75"></div>
    <div class="absolute bottom-48 left-24 w-28 h-0.5 bg-pink-600 -rotate-45 opacity-80"></div>
    <div class="absolute top-80 right-40 w-36 h-0.5 bg-pink-400 -rotate-45 opacity-85"></div>
    
    <!-- Green diagonal lines -->
    <div class="absolute top-40 right-80 w-24 h-0.5 bg-green-500 rotate-45 opacity-70"></div>
    <div class="absolute bottom-40 right-48 w-32 h-0.5 bg-green-600 rotate-45 opacity-75"></div>
    
    <!-- Yellow diagonal lines -->
    <div class="absolute top-56 left-64 w-28 h-0.5 bg-yellow-500 rotate-45 opacity-80"></div>
    <div class="absolute bottom-56 left-80 w-20 h-0.5 bg-yellow-600 -rotate-45 opacity-85"></div>
    <div class="absolute top-72 right-56 w-44 h-0.5 bg-yellow-400 rotate-45 opacity-70"></div>
    
    <!-- Orange diagonal lines -->
    <div class="absolute top-24 right-24 w-16 h-0.5 bg-orange-500 -rotate-45 opacity-75"></div>
    <div class="absolute bottom-24 left-40 w-24 h-0.5 bg-orange-600 rotate-45 opacity-80"></div>
    
    <!-- Purple diagonal lines -->
    <div class="absolute top-44 left-72 w-20 h-0.5 bg-purple-500 rotate-45 opacity-70"></div>
    <div class="absolute bottom-44 right-72 w-32 h-0.5 bg-purple-600 -rotate-45 opacity-75"></div>
    
    <!-- Vertical stripes on the right -->
    <div class="absolute top-0 right-16 flex space-x-0.5">
      <div class="w-0.5 h-24 bg-pink-500 opacity-70"></div>
      <div class="w-0.5 h-32 bg-red-500 opacity-75"></div>
      <div class="w-0.5 h-28 bg-orange-500 opacity-80"></div>
      <div class="w-0.5 h-36 bg-yellow-500 opacity-70"></div>
      <div class="w-0.5 h-40 bg-pink-600 opacity-85"></div>
      <div class="w-0.5 h-44 bg-red-600 opacity-75"></div>
      <div class="w-0.5 h-48 bg-orange-600 opacity-80"></div>
      <div class="w-0.5 h-52 bg-yellow-600 opacity-70"></div>
      <div class="w-0.5 h-56 bg-pink-700 opacity-85"></div>
      <div class="w-0.5 h-60 bg-red-700 opacity-75"></div>
      <div class="w-0.5 h-64 bg-orange-700 opacity-80"></div>
      <div class="w-0.5 h-68 bg-yellow-700 opacity-70"></div>
    </div>
    
    <!-- Horizontal stripes on the left -->
    <div class="absolute top-0 left-16 flex flex-col space-y-0.5">
      <div class="h-0.5 w-24 bg-blue-500 opacity-70"></div>
      <div class="h-0.5 w-32 bg-cyan-500 opacity-75"></div>
      <div class="h-0.5 w-28 bg-teal-500 opacity-80"></div>
      <div class="h-0.5 w-36 bg-green-500 opacity-70"></div>
      <div class="h-0.5 w-40 bg-blue-600 opacity-85"></div>
      <div class="h-0.5 w-44 bg-cyan-600 opacity-75"></div>
      <div class="h-0.5 w-48 bg-teal-600 opacity-80"></div>
      <div class="h-0.5 w-52 bg-green-600 opacity-70"></div>
    </div>
    
    <!-- Circles -->
    <div class="absolute top-72 left-56 w-8 h-8 bg-yellow-400 rounded-full opacity-80"></div>
    <div class="absolute bottom-72 right-56 w-6 h-6 bg-pink-400 rounded-full opacity-85"></div>
  </div>

  <!-- Main content -->
  <div class="relative z-10 text-center max-w-4xl mx-auto px-4">
    <!-- Our Vision label -->
    <div class="mb-8">
      <span class="text-pink-600 font-medium text-lg">—Our Vision</span>
    </div>
    
    <!-- Main heading -->
    <h1 class="text-5xl md:text-6xl lg:text-7xl font-bold text-gray-900 mb-6 leading-tight">
      全ての企業に<br>
      <span class="text-blue-600">自社開発</span>を
    </h1>
    
    <!-- Subtext -->
    <p class="text-xl md:text-2xl text-gray-600 mb-8 leading-relaxed max-w-3xl mx-auto">
      私達アジャイルテクノロジーは「全ての企業に自社開発」をビジョンに<br>
      全ての企業様のDXを一気通貫で支援するプロフェッショナルカンパニーです
    </p>
    
    <!-- CTA Button -->
    <div class="mt-12">
      <a href="#message" class="inline-flex items-center px-8 py-4 bg-black text-white font-medium rounded-lg hover:bg-gray-800 transition-colors duration-300">
        TOPメッセージを読む
        <span class="ml-2 text-pink-500 font-bold">+</span>
      </a>
    </div>
  </div>
</section>
    </div>
    
    <!-- Blue stripes on the left with left movement -->
    <div class="absolute top-20 left-0 flex flex-col space-y-1">
      <div class="h-1 w-32 bg-blue-400 animate-float-slow opacity-70"
           data-scroll-speed="0.3" data-scroll-direction="left"></div>
      <div class="h-1 w-28 bg-blue-500 animate-float-medium opacity-75"
           data-scroll-speed="0.25" data-scroll-direction="left"></div>
      <div class="h-1 w-36 bg-cyan-400 animate-float-fast opacity-65"
           data-scroll-speed="0.4" data-scroll-direction="left"></div>
      <div class="h-1 w-24 bg-blue-600 animate-float-slow opacity-80"
           data-scroll-speed="0.2" data-scroll-direction="left"></div>
      <div class="h-1 w-40 bg-sky-400 animate-float-medium opacity-70"
           data-scroll-speed="0.35" data-scroll-direction="left"></div>
    </div>
  </div>

  <div class="relative z-10 text-center max-w-4xl mx-auto px-6 py-16">
    <!-- Agile Technology logo/text -->
    <div class="mb-2">
      <span class="text-gray-700 text-sm">Agile Technology</span>
    </div>

    <!-- Main Title -->
    <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
      全ての企業に<br>
      自社開発を
    </h1>

    <!-- Subtitle -->
    <p class="text-base md:text-lg text-gray-700 mb-8 max-w-2xl mx-auto leading-relaxed">
      生成AIの登場で自社開発はもはや夢物語では無くなりました。すべての企業に自社開発<br>
      の機会を提供し、最適なDX化を実現することで、日本全体の生産性向上に貢献<br>
      します。
    </p>

    <!-- CTA Buttons -->
    <div class="flex gap-4 justify-center">
      <a 
        href="#contact" 
        class="px-6 py-2.5 bg-green-500 hover:bg-green-600 text-white font-medium rounded transition-all text-sm inline-flex items-center"
      >
        <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
          <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
          <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
        </svg>
        お問い合わせ
      </a>
      <a 
        href="#services" 
        class="px-6 py-2.5 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded transition-all text-sm"
      >
        サービスを見る
      </a>
    </div>
  </div>
</section>

<!-- Scroll Animation Script -->
<script>
/**
 * スクロール連動斜線アニメーション
 * パフォーマンス最適化済み（Intersection Observer + requestAnimationFrame）
 */
class ScrollStripesAnimation {
  constructor() {
    this.elements = [];
    this.ticking = false;
    this.isVisible = false;
    this.observer = null;
    
    this.init();
  }
  
  init() {
    // スクロール対象要素の取得
    this.elements = document.querySelectorAll('[data-scroll-speed]');
    
    if (this.elements.length === 0) {
      console.warn('No scroll animation elements found');
      return;
    }
    
    // Intersection Observer for performance
    this.setupIntersectionObserver();
    
    // スクロールイベントの設定
    this.bindScrollEvent();
    
    // GPU acceleration の有効化
    this.enableHardwareAcceleration();
  }
  
  setupIntersectionObserver() {
    const options = {
      root: null,
      rootMargin: '50px',
      threshold: 0.1
    };
    
    this.observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.target.classList.contains('hero-background')) {
          this.isVisible = entry.isIntersecting;
        }
      });
    }, options);
    
    // HeroSectionの観察
    const heroSection = document.querySelector('section[class*="min-h-screen"]');
    if (heroSection) {
      heroSection.classList.add('hero-background');
      this.observer.observe(heroSection);
    }
  }
  
  bindScrollEvent() {
    window.addEventListener('scroll', () => {
      if (!this.ticking && this.isVisible) {
        requestAnimationFrame(() => {
          this.updateElements();
          this.ticking = false;
        });
        this.ticking = true;
      }
    }, { passive: true });
  }
  
  enableHardwareAcceleration() {
    this.elements.forEach(element => {
      element.style.willChange = 'transform';
      element.style.backfaceVisibility = 'hidden';
    });
  }
  
  calculateOffset(scrollY, speed, direction) {
    const baseOffset = scrollY * speed;
    
    switch (direction) {
      case 'up-left':
        return { x: -baseOffset * 0.5, y: -baseOffset };
      case 'up-right':
        return { x: baseOffset * 0.5, y: -baseOffset };
      case 'down-left':
        return { x: -baseOffset * 0.3, y: baseOffset * 0.8 };
      case 'down-right':
        return { x: baseOffset * 0.3, y: baseOffset * 0.8 };
      case 'left':
        return { x: -baseOffset, y: 0 };
      case 'right':
        return { x: baseOffset, y: 0 };
      case 'vertical':
        return { x: 0, y: baseOffset };
      case 'horizontal':
        return { x: baseOffset, y: 0 };
      default:
        return { x: 0, y: -baseOffset * 0.5 };
    }
  }
  
  updateElements() {
    const scrollY = window.pageYOffset || document.documentElement.scrollTop;
    
    this.elements.forEach(element => {
      const speed = parseFloat(element.dataset.scrollSpeed) || 0.5;
      const direction = element.dataset.scrollDirection || 'vertical';
      const { x, y } = this.calculateOffset(scrollY, speed, direction);
      
      // 既存のrotationを保持しつつtransformを適用
      const rotation = element.style.getPropertyValue('--rotation') || '0deg';
      element.style.transform = `translate3d(${x}px, ${y}px, 0) rotate(${rotation})`;
    });
  }
  
  destroy() {
    if (this.observer) {
      this.observer.disconnect();
    }
    
    // willChangeプロパティをクリア
    this.elements.forEach(element => {
      element.style.willChange = 'auto';
    });
  }
}

// prefers-reduced-motion対応
const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');

if (!prefersReducedMotion.matches) {
  // ページ読み込み後にアニメーション開始
  window.addEventListener('load', () => {
    new ScrollStripesAnimation();
  });
}

// motion設定変更の監視
prefersReducedMotion.addListener((e) => {
  if (e.matches) {
    // アニメーション停止
    document.querySelectorAll('[data-scroll-speed]').forEach(element => {
      element.style.transform = '';
      element.style.willChange = 'auto';
    });
  }
});
</script>

<style>
  @keyframes float-slow {
    0%, 100% { transform: translateY(0px) rotate(var(--rotation, 0deg)); }
    50% { transform: translateY(-15px) rotate(var(--rotation, 0deg)); }
  }
  
  @keyframes float-medium {
    0%, 100% { transform: translateY(0px) rotate(var(--rotation, 0deg)); }
    50% { transform: translateY(-10px) rotate(var(--rotation, 0deg)); }
  }
  
  @keyframes float-fast {
    0%, 100% { transform: translateY(0px) rotate(var(--rotation, 0deg)); }
    50% { transform: translateY(-20px) rotate(var(--rotation, 0deg)); }
  }
  
  .animate-float-slow {
    animation: float-slow 8s ease-in-out infinite;
  }
  
  .animate-float-medium {
    animation: float-medium 6s ease-in-out infinite;
    animation-delay: 1s;
  }
  
  .animate-float-fast {
    animation: float-fast 4s ease-in-out infinite;
    animation-delay: 2s;
  }
  
  /* Custom rotation variables */
  .rotate-45 { --rotation: 45deg; }
  .rotate-12 { --rotation: 12deg; }
  .-rotate-45 { --rotation: -45deg; }
  .rotate-30 { --rotation: 30deg; }
  .-rotate-12 { --rotation: -12deg; }
  .rotate-60 { --rotation: 60deg; }
  .-rotate-30 { --rotation: -30deg; }
  .rotate-75 { --rotation: 75deg; }
  
  /* Scroll animation performance optimization */
  [data-scroll-speed] {
    will-change: transform;
    backface-visibility: hidden;
    transform: translateZ(0);
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    [data-scroll-speed] {
      transform: none !important;
    }
    
    .animate-float-slow,
    .animate-float-medium,
    .animate-float-fast {
      animation: none !important;
    }
  }
</style>
