name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["Ready.ai Site Sync"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build Astro site
        run: pnpm build
        env:
          NODE_ENV: production
          
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: agiletec
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create deployment comment
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = process.env.CF_PAGES_URL || 'https://agiletec.pages.dev';
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `üöÄ „Éá„Éó„É≠„Ç§„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ\n\n„Éó„É¨„Éì„É•„Éº: ${deploymentUrl}`
            });
            
      - name: Purge Cloudflare cache
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'